<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Mls Blog</title>
    @await RenderSectionAsync("Head", required: false)
</head>
<style>
    .navbar {
        box-shadow: 0 2px 0 #7f143f;
        border-radius: 18px;
    }
</style>

<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-white border-bottom ">
            <div class="container">
                <a href="/post" class="navbar-brand">
                    <img style="height: 40px;" src="/img/mlsblog.png" alt="Mls Blog Logo">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">

                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a href="/post" class="nav-link">Posts</a>
                        </li>
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <li class="nav-item">
                                @if (User.IsInRole("Admin"))
                                {
                                    <a href="/post/list" class="nav-link">Manage Posts</a>
                                }
                                else
                                {
                                    <a href="/post/list" class="nav-link">My Posts</a>
                                }

                            </li>
                        }
                    </ul>

                    <ul class="navbar-nav ms-auto mb-2 mb-lg-0 align-items-lg-center">
                        @if (User.Identity!.IsAuthenticated)
                        {
                            @await Component.InvokeAsync("Notifications")

                            <li class="nav-item dropdown">
                                <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                                    @User.Identity.Name
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a href="/profile/@User.Identity.Name" class="dropdown-item">
                                            <i class="bi bi-person-circle me-2"></i> My Profile
                                        </a>
                                    </li>
                                    <li>
                                        <a href="/users/editprofile" class="dropdown-item">
                                            <i class="bi bi-gear-fill me-2"></i> Edit Profile
                                        </a>
                                    </li>
                                    <li><a href="/Message/Index"
                                            class="dropdown-item d-flex justify-content-between align-items-center">
                                            <span><i class="bi bi-envelope-fill me-2"></i> Messages</span>
                                            @await Component.InvokeAsync("UnreadMessageCount")
                                        </a></li>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <li>
                                            <hr class="dropdown-divider">
                                        </li>
                                        <li><a class="dropdown-item" href="/Admin/UserList"><i
                                                    class="bi bi-people-fill me-2"></i> Admin Panel</a></li>
                                    }

                                    <li>
                                        <hr class="dropdown-divider">
                                    </li>
                                    <li>
                                        <a href="/users/logout" class="dropdown-item">
                                            <i class="bi bi-box-arrow-right me-2"></i> Log Out
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a href="/users/login" class="nav-link">Log In</a>
                            </li>
                            <li class="nav-item">
                                <a href="/users/register" class="nav-link">Sign Up</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="container mt-3">
        @RenderBody()
    </main>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var notificationLink = document.getElementById('notificationDropdown');

            if (notificationLink) {
                notificationLink.addEventListener('show.bs.dropdown', function () {
                    var badge = document.getElementById('notification-badge');

                    if (badge && !badge.classList.contains('d-none')) {
                        fetch('/Notifications/MarkAllAsRead', {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                            }
                        }).then(response => {
                            if (response.ok) return response.json();
                            return Promise.reject(response);
                        })
                            .then(data => {
                                if (data.success) {
                                    badge.classList.add('d-none');
                                    var unreadItems = document.querySelectorAll('.dropdown-menu a[style*="background-color"]');
                                    unreadItems.forEach(item => {
                                        item.style.backgroundColor = 'transparent';
                                    });
                                }
                            }).catch(error => console.error('Error marking notifications as read:', error));
                    }
                });
            }
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            toastr.options = {
                "positionClass": "toast-bottom-right"
            };
            @if (TempData["ToastMessage"] != null)
                {
                    var message = TempData["ToastMessage"]?.ToString();
                    var type = TempData["ToastType"]?.ToString() ?? "info";

                    if (type == "success")
                    {
                        <text>
                            toastr.success("@Html.Raw(message)");
                        </text>
                }
                            else if (type == "error")
                    {
                        <text>
                            toastr.error("@Html.Raw(message)");
                        </text>
                }
                            else if (type == "warning")
                    {
                        <text>
                            toastr.warning("@Html.Raw(message)");
                        </text>
                }
                    else
                    {
                        <text>
                            toastr.info("@Html.Raw(message)");
                        </text>
                }
                }
    });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>