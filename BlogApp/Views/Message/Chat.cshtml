@model ChatViewModel
@using System.Security.Claims

@{
    Layout = null;
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<style>
    .card-header {
        background-color: var(--card-background);
        border-bottom: 1px solid var(--border-color);
        color: var(--text-color);
        transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
    }

    #chat-box {
        flex-grow: 1;
        overflow-y: auto;
        background-color: var(--background-color);
        transition: background-color 0.3s ease;
        padding-top: 1rem;
        padding-bottom: 1rem;
    }

    .message-bubble {
        padding: 0.8rem 1.2rem;
        border-radius: 1.2rem;
        margin-bottom: 0.5rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        max-width: 100%;
        word-wrap: break-word;
        font-size: 0.95rem;
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
    }

    .message-bubble.current-user {
        background-color: var(--primary-color);
        color: white;
        margin-left: auto;
    }

    .message-bubble.other-user {
        background-color: var(--chat-bubble-other-bg);
        color: var(--text-color);
        margin-right: auto;
    }

    .message-timestamp {
        font-size: 0.75rem;
        color: var(--text-secondary-color);
        margin-top: 0.2rem;
        opacity: 0.8;
        transition: color 0.3s ease;
    }

    .input-group {
        border-top: 1px solid var(--border-color);
        background-color: var(--card-background);
        padding: 1rem;
        display: flex;
        align-items: center;
        transition: background-color 0.3s ease, border-color 0.3s ease;
    }

    .input-group .form-control {
        border-radius: 1.5rem;
        padding: 0.75rem 1.2rem;
        font-size: 1rem;
        border: 1px solid var(--border-color);
        background-color: var(--background-color);
        color: var(--text-color) !important;
        transition: all 0.3s ease;
        box-shadow: none;
    }

    .input-group .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.2rem var(--primary-color-shadow);
    }

    .input-group .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 1.5rem;
        padding: 0.75rem 1rem;
        margin-left: 0.5rem;
        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .input-group .btn-primary:hover {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
        transform: translateY(0);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    .input-group .btn-primary i {
        font-size: 1.2rem;
        color: white;
    }

    .text-dark {
        color: var(--text-color) !important;
    }

    .text-muted {
        color: var(--text-secondary-color) !important;
    }

    .bg-white {
        background-color: var(--card-background) !important;
    }

    .bg-primary {
        background-color: var(--primary-color) !important;
    }

    :root {
        --chat-bubble-other-bg: #e9ecef;
    }

    .dark-theme {
        --chat-bubble-other-bg: #4a5568;
    }
</style>


<div class="card-header d-flex align-items-center p-3 border-bottom">
    <img src="/img/@(Model.OtherUser.Image ?? "default-avatar.jpg")" alt="avatar" class="rounded-circle me-3"
        style="width: 40px; height: 40px;">

    <h5 class="mb-0">
        <a href="/profile/@Model.OtherUser.UserName" class="text-dark text-decoration-none">
            @Model.OtherUser.Name
        </a>
    </h5>
</div>

<div id="chat-box" class="p-4">
    @foreach (var msg in Model.Messages)
    {
        var isCurrentUser = msg.SenderId == currentUserId;
        var messageClass = isCurrentUser ? "d-flex flex-row-reverse" : "d-flex flex-row";
        var bubbleClass = isCurrentUser ? "current-user" : "other-user";

        <div class="mb-3 @messageClass">
            <div style="max-width: 70%;">
                <p class="message-bubble @bubbleClass">
                    @msg.Content
                </p>
                <small class="message-timestamp d-block @(isCurrentUser ? "text-end" : "text-start") px-1">
                    @msg.SentAt.ToString("HH:mm")
                </small>
            </div>
        </div>
    }
</div>

<div class="input-group">
    <form asp-action="Chat" method="post" id="messageForm" autocomplete="off" class="w-100 d-flex">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="OtherUser.UserName" />
        <input asp-for="NewMessageContent" class="form-control" style="color:var(--text-color); !important"
            placeholder="Type a message..." autofocus />
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-send-fill"></i>
        </button>
    </form>
</div>

<script>
    var chatBox = document.getElementById("chat-box");
    if (chatBox) {
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    $('#messageForm').on('submit', function (e) {
        e.preventDefault();
        var form = $(this);
        var url = form.attr('action');

        $.ajax({
            type: "POST",
            url: url,
            data: form.serialize(),
            success: function (data) {
                $('#chat-content-area').html(data);
                var chatBox = document.getElementById("chat-box");
                if (chatBox) {
                    chatBox.scrollTop = chatBox.scrollHeight;
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to send message: ' + (xhr.responseJSON?.message || error)
                });
            }
        });
    });
</script>
