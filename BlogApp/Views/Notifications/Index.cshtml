@model List<Notification>

@{
    ViewData["Title"] = "Notifications | MyBlog";
    ViewBag.MetaDescription = "View all your notifications on MyBlog.";
}

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: 'Roboto', sans-serif;
        color: var(--text-color);
    }

    .notification-container {
        max-width: 800px;
        margin: 40px auto;
        padding: 2rem;
        background: var(--card-background);
        border-radius: 1.25rem;
        box-shadow: var(--card-shadow);
        border: 1px solid var(--border-color);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .notification-container:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15);
    }

    .notification-item {
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-color);
        transition: background-color 0.3s ease;
    }

    .notification-item:last-child {
        border-bottom: none;
    }

    .notification-item:hover {
        background-color: var(--hover-background);
    }

    .notification-item .notification-message {
        color: var(--text-color);
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .notification-item .notification-time {
        color: var(--text-secondary-color);
        font-size: 0.9rem;
    }

    .unread-notification {
        background-color: var(--light-primary-background);
        font-weight: 500;
    }

    .no-notifications {
        text-align: center;
        color: var(--text-secondary-color);
        padding: 2rem;
    }

    .back-to-top {
        display: block;
        margin-top: 2rem;
        text-align: center;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border: none;
        border-radius: 0.75rem;
        padding: 0.9rem 2rem;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: var(--secondary-color);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
</style>

<div class="notification-container">
    <h2>All Notifications</h2>

    @if (Model.Any())
    {
        foreach (var notification in Model)
        {
            <div class="notification-item @(notification.IsRead ? "" : "unread-notification")">
                <div class="notification-message">@notification.Message</div>
                <div class="notification-time">@notification.CreatedAt.ToString("MMM dd, HH:mm")</div>
            </div>
        }
        <a href="/collections" class="back-to-top btn btn-primary">Back to Collections</a>
    }
    else
    {
        <div class="no-notifications">
            You have no notifications at the moment.
        </div>
    }
</div>