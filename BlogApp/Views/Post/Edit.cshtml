@model BlogApp.Models.PostCreateViewModel
@using System.Linq

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: 'Roboto', sans-serif;
        color: var(--text-color);
    }

    .login-card {
        max-width: 1000px;
        margin-top: 0 !important;
        width: 100%;
        padding: 3rem;
        background: var(--card-background);
        border-radius: 1.5rem;
        box-shadow: var(--card-shadow);
        transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
        margin: 60px auto;
        border: 1px solid var(--border-color);
    }

    .login-card:hover {
        transform: translateY(-7px);
        box-shadow: 0 18px 36px rgba(0, 0, 0, 0.18);
    }

    .form-control {
        border: 1px solid var(--border-color);
        border-radius: 0.75rem;
        padding: 0.85rem 1.2rem;
        font-size: 1rem;
        transition: border-color 0.2s ease, box-shadow 0.2s ease, background-color 0.3s ease, color 0.3s ease;
        font-family: 'Inter', sans-serif;
        background-color: var(--card-background);
        color: var(--text-color);
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem var(--primary-color-shadow);
        outline: none;
    }

    .form-label {
        font-weight: 600;
        color: var(--text-color);
        font-size: 1rem;
        margin-bottom: 0.6rem;
        display: block;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 0.75rem;
        padding: 0.9rem 2rem;
        font-weight: 600;
        font-size: 1rem;
        color: white;
        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
        width: 100%;
        max-width: 200px;
        display: block;
        margin: 2.5rem auto 0;
        position: relative;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .btn-primary:hover {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    }

    .btn-primary.loading::after {
        content: '';
        position: absolute;
        width: 20px;
        height: 20px;
        border: 2px solid #fff;
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 0.6s linear infinite;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    @@keyframes spin {
        0% {
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    .text-danger {
        font-size: 0.9rem;
        color: var(--error-color);
        margin-top: 0.4rem;
        display: block;
    }

    .form-check-input {
        width: 1.3rem;
        height: 1.3rem;
        border-radius: 0.35rem;
        border: 1px solid var(--border-color);
        transition: background-color 0.2s ease, border-color 0.2s ease;
        background-color: var(--card-background);
    }

    .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .form-check-label {
        font-size: 1rem;
        color: var(--text-secondary-color);
        margin-left: 0.6rem;
        cursor: pointer;
    }

    .form-check {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
    }

    .tag-section {
        background: var(--card-background);
        padding: 1.8rem;
        border-radius: 1rem;
        border: 1px solid var(--border-color);
        box-shadow: var(--card-shadow);
    }

    .section-title {
        font-size: 1.6rem;
        font-weight: 700;
        color: var(--text-color);
        margin-bottom: 1.5rem;
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 0.8rem;
    }

    .preview-img {
        max-width: 100%;
        height: auto;
        border-radius: 0.75rem;
        margin-top: 1.5rem;
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--border-color);
    }

    .alert-danger {
        background-color: var(--error-background);
        color: var(--error-color);
        padding: 1.2rem;
        border-radius: 0.75rem;
        margin-bottom: 1.5rem;
        border: 1px solid var(--error-border);
        font-size: 0.95rem;
    }

    .info-text {
        font-size: 0.95rem;
        color: var(--text-secondary-color);
        margin-top: 0.5rem;
    }

    .no-tags {
        font-size: 0.95rem;
        color: var(--text-secondary-color);
        margin-bottom: 0.75rem;
    }

    .form-control-hidden {
        display: none;
    }

    .custom-file-input-wrapper {
        display: flex;
        align-items: center;
        justify-content: space-between;
        background-color: var(--card-background);
        border: 1px solid var(--border-color);
        border-radius: 0.75rem;
        padding: 0.85rem 1.2rem;
        cursor: pointer;
        transition: border-color 0.2s ease, box-shadow 0.2s ease;
    }

    .custom-file-input-wrapper:hover {
        border-color: var(--primary-color);
    }

    .custom-file-label {
        font-weight: 600;
        color: var(--text-color);
        cursor: pointer;
        margin-bottom: 0;
    }

    .file-name-display {
        color: var(--text-secondary-color);
        font-size: 0.9rem;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        margin-left: 1rem;
    }
</style>
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<div class="container d-flex justify-content-center align-items-center py-5">
        <div class="login-card">
                <h1 class="text-center mb-5 fw-bold" style="color: var(--primary-color);">Edit Post</h1>
                @if (!ViewData.ModelState.IsValid)
                {
                        <div class="alert alert-danger">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                        <p>@error.ErrorMessage</p>
                                }
                            </div>
                }
                <form asp-action="Edit" asp-controller="Post" method="post" enctype="multipart/form-data"
            class="space-y-6" id="editPostForm">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="All" class="text-danger text-center font-medium mb-4"></div>
                        <input type="hidden" asp-for="PostId" id="PostId" />
                        <div class="row">
                                <div class="col-md-8">
                                        <div class="mb-4">
                                                <label for="Title" class="form-label">Post Title</label>
                                                <input asp-for="Title" class="form-control" id="Title"
                            placeholder="Enter the post title" title="Enter a concise and descriptive title" />
                                                <span asp-validation-for="Title" class="text-danger"></span>
                                            </div>
                                        <div class="mb-4">
                                                <label for="Description" class="form-label">Description</label>
                                                <input asp-for="Description" class="form-control" id="Description"
                            placeholder="Write a brief description" title="Provide a short summary of the post" />
                                                <span asp-validation-for="Description" class="text-danger"></span>
                                            </div>
                                        <div class="mb-4">
                                                <label for="Url" class="form-label">URL Slug</label>
                                                <input asp-for="Url" class="form-control" id="Url"
                            placeholder="Enter a unique URL slug (e.g., my-post)"
                            title="Use a unique, SEO-friendly URL" />
                                                <span asp-validation-for="Url" class="text-danger"></span>
                                            </div>
                                        <div class="mb-4">
                                                <label for="Content" class="form-label">Content</label>
                                                                        <div id="editor-container"
                            style="height: 400px; border: 1px solid var(--border-color); border-radius: 0.75rem; transition: border-color 0.2s ease;">
                        </div>
                                                                        <textarea asp-for="Content" class="form-control"
                            id="Content" style="display: none;"></textarea>
                                                <span asp-validation-for="Content" class="text-danger"></span>
                                            </div>
                                        @if (User.Identity?.IsAuthenticated == true && User.IsInRole("Admin"))
                                        {
                                                <div class="form-check mt-4">
                                                        <input asp-for="IsActive" class="form-check-input" id="IsActive" />
                                                        <label for="IsActive" class="form-check-label">Publish Post</label>
                                                    </div>
                                        }
                                    </div>
                                <div class="col-md-4">
                                        <div class="tag-section">
                                                <h3 class="section-title">Tags</h3>
                                                @if (ViewBag.Tags is List<BlogApp.Entity.Tag> tags && tags.Any())
                                                {
                                                        @foreach (var tag in tags)
                                                        {
                                                                <div class="form-check mb-2">
                                                                        <input class="form-check-input" name="SelectedTagIds"
                                        type="checkbox" value="@tag.TagId" id="tag_@tag.TagId"                                  
                                                     @(Model?.SelectedTagIds?.Contains(tag.TagId.ToString()) == true ? "checked"
                                                                                     : "") />
                                                                        <label for="tag_@tag.TagId"
                                        class="form-check-label">@tag.Text</label>
                                                                    </div>
                                                        }
                                                }
                                                else
                                                {
                                                        <p class="no-tags">No tags available.</p>
                                                }
                                            </div>
                                        <div class="tag-section mt-4">
                                                <h3 class="section-title">Featured Image</h3>
                                                <div class="mb-4">
                                                        <label for="imageFile" class="form-label">Select Image</label>
                                                       
                                                        <input type="file" name="imageFile" id="imageFile"
                                class="form-control-hidden" accept="image/*" />
                                                        <div class="custom-file-input-wrapper">
                                                                <label for="imageFile" class="custom-file-label">Choose
                                    File</label>
                                                                <span id="fileNameDisplay" class="file-name-display">No
                                    file chosen</span>
                                                            </div>

                                                        @if (!string.IsNullOrEmpty(Model?.Image))
                                                        {
                                                                <img id="imagePreview" class="preview-img"
                                    src="/img/@Model.Image" alt="Image preview" />
                                                        }
                                                        else
                                                        {
                                                                <img id="imagePreview" class="preview-img"
                                    alt="Image preview" style="display: none" />
                                                        }
                                                        <span class="text-danger" id="imageFileError"></span>
                                                    </div>
                                            </div>
                                    </div>
                            </div>
                        <div class="d-grid">
                                <button type="submit" class="btn btn-primary" id="saveButton">Save Post</button>
                            </div>
                    </form>
            </div>
</div>
@section Scripts {
   
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
   
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
   
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
   
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
   
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
    <script>
        $(document).ready(function () {
            var toolbarOptions = [
                ['bold', 'italic', 'underline', 'strike'],
                ['blockquote', 'code-block'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                [{ 'indent': '-1' }, { 'indent': '+1' }],
                [{ 'direction': 'rtl' }],
                [{ 'size': ['small', false, 'large', 'huge'] }],
                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
                ['link', 'image'],
                ['clean']
            ];

            var quill = new Quill('#editor-container', {
                theme: 'snow',
                placeholder: 'Write your post content...',
                modules: {
                    toolbar: toolbarOptions
                }
            });

            const existingContent = document.getElementById('Content').value;
            if (existingContent) {
                quill.root.innerHTML = existingContent;
            }

            $("#editPostForm").on("submit", function (e) {
                const content = quill.root.innerHTML.trim();
                if (content === '<p><br></p>' || content === '') {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Post content cannot be empty!',
                    });
                    return;
                }
                document.getElementById('Content').value = content;

                const saveButton = $("#saveButton");
                saveButton.addClass("loading");
                saveButton.prop("disabled", true);
                saveButton.text("Saving...");
            });

            $('input[name="SelectedTagIds"]').on("change", function () {
                const selectedTags = $('input[name="SelectedTagIds"]:checked').map(function () {
                    return this.value;
                }).get();
                console.log("Current Selected Tag IDs:", selectedTags);
            });

            document.addEventListener('DOMContentLoaded', function () {
                const imageFile = document.getElementById('imageFile');
                const imagePreview = document.getElementById('imagePreview');
                const fileNameDisplay = document.getElementById('fileNameDisplay');

                const currentImage = '@Model.Image';
                if (currentImage) {
                    fileNameDisplay.textContent = currentImage;
                }

                imageFile.addEventListener('change', function () {
                    const file = this.files[0];
                    if (file) {
                        fileNameDisplay.textContent = file.name;
                        const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg', 'image/gif'];
                        if (!allowedTypes.includes(file.type)) {
                            document.getElementById('imageFileError').textContent = 'Invalid image format. Only PNG, JPG, JPEG, and GIF are allowed.';
                            this.value = '';
                            document.getElementById('imagePreview').style.display = 'none';
                            fileNameDisplay.textContent = 'No file chosen';
                            return;
                        }
                        document.getElementById('imageFileError').textContent = '';
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            imagePreview.src = e.target.result;
                            imagePreview.style.display = 'block';
                        };
                        reader.readAsDataURL(file);
                    } else {
                        fileNameDisplay.textContent = 'No file chosen';
                        imagePreview.src = '@(Model != null && !string.IsNullOrEmpty(Model.Image) ? $"/img/{Model.Image}" : "")';
                        imagePreview.style.display = '@(Model != null && !string.IsNullOrEmpty(Model.Image) ? "block" : "none")';
                    }
                });
            });
        });
    </script>
}